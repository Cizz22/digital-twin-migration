"""empty message

Revision ID: 66176e1b92c3
Revises: 98d0c33803c2
Create Date: 2024-08-27 17:01:03.740750

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '66176e1b92c3'
down_revision = '98d0c33803c2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_mr_resource',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('code', sa.String(length=300), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('auth_mr_role',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('auth_mr_user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('email', sa.String(length=300), nullable=False),
    sa.Column('username', sa.String(length=300), nullable=False),
    sa.Column('password', sa.String(length=300), nullable=False),
    sa.Column('position', sa.String(length=300), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['auth_mr_role.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    with op.batch_alter_table('auth_mr_user', schema=None) as batch_op:
        batch_op.create_index('users_name_email_username_idx', ['name', 'email', 'username'], unique=False)

    op.create_table('auth_tr_role_resource',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('resource_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['resource_id'], ['auth_mr_resource.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['auth_mr_role.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    
    op.drop_table('resources')
    with op.batch_alter_table('hl_ms_excel', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.drop_index('ix_excel_filename')

    with op.batch_alter_table('hl_ms_excel_variables', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.drop_index('ix_excel_id')
        batch_op.drop_constraint('hl_ms_excel_variables_excel_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'hl_ms_excel', ['excel_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('hl_ms_excel_variables_cause', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.drop_constraint('hl_ms_excel_variables_cause_variable_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'hl_ms_excel_variables', ['variable_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('hl_ms_excel_variables_header', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.drop_constraint('hl_ms_excel_variables_header_variable_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'hl_ms_excel_variables', ['variable_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('hl_ms_masterdata', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)

    with op.batch_alter_table('hl_tr_data', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.drop_constraint('hl_tr_data_excel_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'hl_ms_excel', ['excel_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('hl_tr_data_detail', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.drop_index('ix_efficiency_transaction_id')
        batch_op.drop_index('ix_variable_id')
        batch_op.drop_index('ix_variable_id_efficiency_transaction_id')
        batch_op.drop_constraint('hl_tr_data_detail_variable_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('hl_tr_data_detail_efficiency_transaction_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'hl_tr_data', ['efficiency_transaction_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'hl_ms_excel_variables', ['variable_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('hl_tr_data_detail_root_cause', schema=None) as batch_op:
        batch_op.drop_constraint('hl_tr_data_detail_root_cause_cause_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('hl_tr_data_detail_root_cause_data_detail_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'hl_tr_data_detail', ['data_detail_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'hl_ms_excel_variables_cause', ['cause_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('hl_tr_data_detail_root_cause', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('hl_tr_data_detail_root_cause_data_detail_id_fkey', 'hl_tr_data_detail', ['data_detail_id'], ['id'])
        batch_op.create_foreign_key('hl_tr_data_detail_root_cause_cause_id_fkey', 'hl_ms_excel_variables_cause', ['cause_id'], ['id'])

    with op.batch_alter_table('hl_tr_data_detail', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('hl_tr_data_detail_efficiency_transaction_id_fkey', 'hl_tr_data', ['efficiency_transaction_id'], ['id'])
        batch_op.create_foreign_key('hl_tr_data_detail_variable_id_fkey', 'hl_ms_excel_variables', ['variable_id'], ['id'])
        batch_op.create_index('ix_variable_id_efficiency_transaction_id', ['variable_id', 'efficiency_transaction_id'], unique=False)
        batch_op.create_index('ix_variable_id', ['variable_id'], unique=False)
        batch_op.create_index('ix_efficiency_transaction_id', ['efficiency_transaction_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('hl_tr_data', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('hl_tr_data_excel_id_fkey', 'hl_ms_excel', ['excel_id'], ['id'])
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('hl_ms_masterdata', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('hl_ms_excel_variables_header', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('hl_ms_excel_variables_header_variable_id_fkey', 'hl_ms_excel_variables', ['variable_id'], ['id'])
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))

    with op.batch_alter_table('hl_ms_excel_variables_cause', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('hl_ms_excel_variables_cause_variable_id_fkey', 'hl_ms_excel_variables', ['variable_id'], ['id'])
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))

    with op.batch_alter_table('hl_ms_excel_variables', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('hl_ms_excel_variables_excel_id_fkey', 'hl_ms_excel', ['excel_id'], ['id'])
        batch_op.create_index('ix_excel_id', ['excel_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('hl_ms_excel', schema=None) as batch_op:
        batch_op.create_index('ix_excel_filename', ['excel_filename'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    op.create_table('resources',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='resources_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    sa.Column('position', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='users_role_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('username', name='users_username_key')
    )
    op.create_table('roles',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('role_has_resources',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('resource_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['resource_id'], ['resources.id'], name='role_has_resources_resource_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='role_has_resources_role_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='role_has_resources_pkey')
    )
    op.drop_table('auth_tr_role_resource')
    with op.batch_alter_table('auth_mr_user', schema=None) as batch_op:
        batch_op.drop_index('users_name_email_username_idx')

    op.drop_table('auth_mr_user')
    op.drop_table('auth_mr_role')
    op.drop_table('auth_mr_resource')
    # ### end Alembic commands ###
