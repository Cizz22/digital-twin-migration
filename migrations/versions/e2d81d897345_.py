"""empty message

Revision ID: e2d81d897345
Revises: 2615aaf9e872
Create Date: 2024-10-09 09:58:57.920214

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "e2d81d897345"
down_revision = "2615aaf9e872"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "equipment_tree",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "equipment_tree_id",
            sa.UUID(),
            nullable=True,
            comment="ref to id table ini sendiri (recursive)",
        ),
        sa.Column("level_no", sa.Integer(), nullable=False, comment="Level Number"),
        sa.Column("name", sa.String(length=255), nullable=False, comment="Nama Equipment Tree"),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["equipment_tree_id"], ["equipment_tree.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "equipment_master",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "parent_id", sa.UUID(), nullable=True, comment="ref to id table ini sendiri (recursive)"
        ),
        sa.Column(
            "equipment_tree_id",
            sa.UUID(),
            nullable=True,
            comment="ref to id table ini sendiri (recursive)",
        ),
        sa.Column("system_tag", sa.String(length=255), nullable=True, comment="System Tag"),
        sa.Column("assetnum", sa.String(length=255), nullable=True, comment="Asset Number"),
        sa.Column("location_tag", sa.String(length=255), nullable=True, comment="Location Tag"),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["equipment_tree_id"], ["equipment_tree.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["parent_id"], ["equipment_master.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("dl_value_tag")
    op.drop_table("dl_ms_tag")
    op.drop_table("pfi_ms_equipment")
    op.drop_table("pfi_ms_category")
    op.drop_table("pfi_value_tag")
    op.drop_table("dl_ms_equipment")
    op.drop_table("dl_ms_category")
    op.drop_table("pfi_ms_tag")
    with op.batch_alter_table("hl_tr_data_detail_root_cause_members", schema=None) as batch_op:
        batch_op.alter_column(
            "root_cause_id",
            existing_type=sa.UUID(),
            nullable=True,
            existing_comment="Ref to hl_m_cause 1 to many",
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("hl_tr_data_detail_root_cause_members", schema=None) as batch_op:
        batch_op.alter_column(
            "root_cause_id",
            existing_type=sa.UUID(),
            nullable=False,
            existing_comment="Ref to hl_m_cause 1 to many",
        )

    op.create_table(
        "dl_ms_equipment",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "parent_id",
            sa.UUID(),
            autoincrement=False,
            nullable=True,
            comment="ref to id table ini sendiri (recursive)",
        ),
        sa.Column("category_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "name",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
            comment="Nama Equipment",
        ),
        sa.Column(
            "description",
            sa.TEXT(),
            autoincrement=False,
            nullable=True,
            comment="Deskripsi Equipment",
        ),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["dl_ms_category.id"],
            name="dl_ms_equipment_category_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["dl_ms_equipment.id"],
            name="dl_ms_equipment_parent_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="dl_ms_equipment_pkey"),
    )
    op.create_table(
        "pfi_ms_tag",
        sa.Column(
            "id",
            sa.BIGINT(),
            server_default=sa.text("nextval('pfi_ms_tag_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("web_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=150), autoincrement=False, nullable=False),
        sa.Column("path", sa.VARCHAR(length=150), autoincrement=False, nullable=False),
        sa.Column("descriptor", sa.VARCHAR(length=150), autoincrement=False, nullable=True),
        sa.Column("point_class", sa.VARCHAR(length=15), autoincrement=False, nullable=True),
        sa.Column("point_type", sa.VARCHAR(length=15), autoincrement=False, nullable=True),
        sa.Column("digital_set_name", sa.VARCHAR(length=150), autoincrement=False, nullable=True),
        sa.Column("engineering_units", sa.VARCHAR(length=15), autoincrement=False, nullable=True),
        sa.Column("span", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("zero", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("step", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("future", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("display_digits", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="pfi_ms_tag_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "dl_ms_category",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "name",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
            comment="Nama Category",
        ),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="dl_ms_category_pkey"),
    )
    op.create_table(
        "pfi_ms_equipment",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "parent_id",
            sa.UUID(),
            autoincrement=False,
            nullable=True,
            comment="ref to id table ini sendiri (recursive)",
        ),
        sa.Column("category_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "name",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
            comment="Nama Equipment",
        ),
        sa.Column(
            "description",
            sa.TEXT(),
            autoincrement=False,
            nullable=True,
            comment="Deskripsi Equipment",
        ),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["pfi_ms_category.id"],
            name="pfi_ms_equipment_category_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["pfi_ms_equipment.id"],
            name="pfi_ms_equipment_parent_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="pfi_ms_equipment_pkey"),
    )
    op.create_table(
        "pfi_value_tag",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("tag_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("time_stamp", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("value", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("units_abbreviation", sa.VARCHAR(length=15), autoincrement=False, nullable=False),
        sa.Column("good", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("questionable", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("substituted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("annotated", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["tag_id"], ["pfi_ms_tag.id"], name="pfi_value_tag_tag_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name="pfi_value_tag_pkey"),
    )
    op.create_table(
        "dl_value_tag",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("tag_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("time_stamp", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("value", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("units_abbreviation", sa.VARCHAR(length=15), autoincrement=False, nullable=False),
        sa.Column("good", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("questionable", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("substituted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("annotated", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["tag_id"], ["dl_ms_tag.id"], name="dl_value_tag_tag_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name="dl_value_tag_pkey"),
    )
    op.create_table(
        "pfi_ms_category",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "name",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
            comment="Nama Category",
        ),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="pfi_ms_category_pkey"),
    )
    op.create_table(
        "dl_ms_tag",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("web_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=150), autoincrement=False, nullable=False),
        sa.Column("path", sa.VARCHAR(length=150), autoincrement=False, nullable=False),
        sa.Column("descriptor", sa.VARCHAR(length=150), autoincrement=False, nullable=True),
        sa.Column("point_class", sa.VARCHAR(length=15), autoincrement=False, nullable=True),
        sa.Column("point_type", sa.VARCHAR(length=15), autoincrement=False, nullable=True),
        sa.Column("digital_set_name", sa.VARCHAR(length=150), autoincrement=False, nullable=True),
        sa.Column("engineering_units", sa.VARCHAR(length=15), autoincrement=False, nullable=True),
        sa.Column("span", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("zero", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("step", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("future", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("display_digits", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="dl_ms_tag_pkey"),
    )
    op.drop_table("equipment_master")
    op.drop_table("equipment_tree")
    # ### end Alembic commands ###
